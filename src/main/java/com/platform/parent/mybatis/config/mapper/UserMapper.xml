<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.parent.mybatis.dao.UserMapper">
    <!--
    private long id;
    private String phone, nickname, password, city, liveDistrict, targetDistrict;
    private Date childBirth;
    private String childGrade;
    private String childGender, childSchool;
    -->
    <resultMap id="userMapBase" type="com.platform.parent.mybatis.bean.User">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="auth" column="auth"/>
        <result property="referee" column="referee"/>
    </resultMap>
    <resultMap id="userMapWithDetail" type="com.platform.parent.mybatis.bean.User">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="auth" column="auth"/>
        <result property="referee" column="referee"/>
        <association property="detail" javaType="com.platform.parent.mybatis.bean.UserDetail">
            <id column="id" property="id"/>
            <result property="city" column="city"/>
            <result property="liveDistrict" column="live_district" />
            <result property="targetDistrict" column="target_district" />
            <result property="childBirth" column="child_birth" />
            <result property="childGrade" column="child_grade" />
            <result property="childGender" column="child_gender" />
            <result property="childSchool" column="child_school" />
        </association>
    </resultMap>
    <resultMap id="userMapWithRole" type="com.platform.parent.mybatis.bean.User">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="auth" column="auth"/>
        <result property="referee" column="referee"/>
        <collection property="roles" ofType="com.platform.parent.mybatis.bean.Role">
            <!--<result column="id" property="id"/>-->
            <result column="name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="detailBase" type="com.platform.parent.response.camp.UserMini">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>
    
    <resultMap id="userLogin" type="com.platform.parent.mybatis.bean.User">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="auth" column="auth"/>
        <result property="avatar" column="avatar" />
        <association property="detail" javaType="com.platform.parent.mybatis.bean.UserDetail">
            <id column="id" property="id"/>
            <result property="city" column="city"/>
            <result property="liveDistrict" column="live_district" />
            <result property="childGrade" column="child_grade" />
            <result property="childGender" column="child_gender" />
            <result property="school" column="alias" />
        </association>
    </resultMap>

    <select id="findUserByPhone" parameterType="java.lang.String" resultMap="userLogin">
        SELECT u.id, u.phone, u.password, u.nickname, u.auth, u.avatar, ud.id, ud.city, ud.live_district, ud.child_grade,
            ud.child_gender, sa.alias
        FROM user u
        LEFT JOIN user_detail ud ON u.id = ud.id
        LEFT JOIN school s ON s.id = ud.child_school
        LEFT JOIN school_alias sa ON sa.school_id = s.id
        WHERE u.phone = #{phone} LIMIT 1
    </select>

    <select id="queryUserById" parameterType="long" resultType="com.platform.parent.mybatis.bean.User">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <select id="queryUserByIdWithDetail" parameterType="long" resultMap="userMapWithDetail">
        SELECT u.*, d.* FROM user u LEFT JOIN user_detail d ON u.id = d.id WHERE u.id = #{id}
    </select>

    <insert id="add" parameterType="com.platform.parent.mybatis.bean.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (phone, password, nickname, referee, avatar) VALUES (#{phone}, #{password}, #{nickname}, #{referee}, #{avatar})
    </insert>

    <update id="update" parameterType="com.platform.parent.mybatis.bean.User">
        UPDATE user
        SET phone = #{phone}, password = #{password}, nickname = #{nickname}, auth = #{auth}, referee = #{referee}, avatar = #{avatar}
        WHERE id = #{id}
    </update>

    <update id="updateAOrN" parameterType="com.platform.parent.mybatis.bean.User">
        UPDATE `user` SET avatar = #{avatar}, nickname = #{nickname}
        WHERE id = #{id}
    </update>

    <delete id="deleteByIds" parameterType="java.lang.String">
        DELETE FROM user WHERE id IN 
        <foreach item="idItem" collection="array" open="(" separator="," close=")">
            #{idItem}
        </foreach>
    </delete>

    <select id="findRoleByCampId" resultMap="detailBase">
        SELECT u.id, u.nickname, u.avatar FROM user u
        LEFT JOIN camp_attend ca ON u.id = ca.user_id
        WHERE ca.role = #{role} AND ca.camp_id = #{campId}
    </select>

    <!--User findUserByCampId(long campId);-->
    <select id="findUserByCampId" parameterType="long" resultMap="userMapBase">
        SELECT u.* FROM user u
        LEFT JOIN teacher t ON t.id = u.id
        LEFT JOIN camp_attend ca ON ca.user_id = t.id
        LEFT JOIN camp c ON ca.camp_id = c.id
        WHERE c.id = #{campId}
    </select>
    <select id="findUserByPhoneWithRole" parameterType="java.lang.String" resultMap="userMapWithRole">
        SELECT U.*, R.name FROM user U
            LEFT JOIN user_role UR ON U.id = UR.user_id
            LEFT JOIN role R ON UR.role_id = R.id
        WHERE phone = #{phone}
    </select>

</mapper>
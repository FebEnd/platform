<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.parent.mybatis.dao.CampMapper">
    <resultMap id="resultMapWithTag" type="com.platform.parent.mybatis.bean.Camp">
        <id column="id" property="id" />
        <result column="type" property="type" />
        <result column="favor" property="favor" />
        <result column="max_limit" property="maxLimit" />
        <result column="min_limit" property="minLimit" />
        <result column="status" property="status" />
        <result column="price0" property="price0" />
        <result column="price1" property="price1" />
        <result column="price2" property="price2" />
        <result column="title" property="title"/>
        <result column="subtitle" property="subtitle"/>
        <result column="group_id" property="groupId"/>
        <collection property="tags" ofType="com.platform.parent.mybatis.bean.Tag">
            <!--<result column="id" property="id"/>-->
            <result column="name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="campWithTitle" type="com.platform.parent.response.school.CampWithTitle">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="subtitle" property="subtitle"/>
        <result column="type" property="type"/>
    </resultMap>

    <resultMap id="campWithGroupId" type="com.platform.parent.response.camp.CampWithGroupId">
        <id property="campId" column="id"/>
        <result property="groupId" column="group_id"/>
        <result property="name" column="title"/>
        <result property="type" column="type"/>
    </resultMap>

    <resultMap id="campWithTeacher" type="com.platform.parent.response.camp.CampWithTeacher">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="favor" property="favor" />
        <result column="max_limit" property="maxLimit" />
        <result column="min_limit" property="minLimit" />
        <result column="status" property="status" />
        <result column="price0" property="price0" />
        <result column="price1" property="price1" />
        <result column="price2" property="price2" />
        <result column="title" property="title"/>
        <result column="subtitle" property="subtitle"/>
        <result column="group_id" property="groupId"/>
        <association property="teacher" javaType="com.platform.parent.mybatis.bean.Teacher">
            <id column="id" property="id"/>
            <result column="star" property="star"/>
        </association>
        <!--<collection property="tags" ofType="com.platform.parent.mybatis.bean.Tag">
            &lt;!&ndash;<result column="id" property="id"/>&ndash;&gt;
            <result column="name" property="name"/>
        </collection>-->
    </resultMap>

    <resultMap id="campList" type="com.platform.parent.response.camp.CampList">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="subtitle" property="subtitle"/>
        <result column="comment" property="comment"/>
        <result column="price0" property="price"/>
        <result column="type" property="type"/>
        <collection property="teachers" ofType="com.platform.parent.mybatis.bean.Teacher">
            <!--<result column="account" property="account"/>-->
            <result column="id" property="id"/>
            <result column="star" property="star"/>
            <result column="description" property="description"/>
            <!--<result column="status" property="status"/>-->
            <collection property="tags" ofType="com.platform.parent.mybatis.bean.Tag">
                <id column="id" property="id"/>
                <result column="name" property="name"/>
            </collection>
        </collection>
    </resultMap>

    <sql id="baseColumn" >
        id, type, favor,description, comment, max_limit, min_limit, status, price0, price1, price2, title, subtitle
    </sql>

    <!--this.type = type;
        this.favor = favor;
        this.maxLimit = maxLimit;
        this.minLimit = minLimit;
        this.status = status;
        this.price0 = price0;
        this.price1 = price1;
        this.price2 = price2;-->
    <insert id="add" parameterType="com.platform.parent.mybatis.bean.Camp" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO camp (type, favor,description, comment, max_limit, min_limit, status, price0, price1, price2, title, subtitle, group_id)
        VALUES (#{type}, #{favor},#{description}, #{comment}, #{maxLimit}, #{minLimit}, #{status}, #{price0}, #{price1}, #{price2}, #{title}, #{subtitle}, #{groupId})
    </insert>
    <update id="update" parameterType="com.platform.parent.mybatis.bean.Camp">
        UPDATE camp
        SET type   = #{type}, favor = #{favor}, max_limit = #{maxLimit}, min_limit = #{minLimit},
            status = #{status}, price0 = #{price0}, price1 = #{price1}, price2 = #{price2},
            description = #{description}, comment = #{comment}, title = #{title}, subtitle = #{subtitle},
            group_id = #{groupId}
        WHERE id = #{id}
    </update>
    <delete id="deleteByIds" parameterType="java.lang.String">
        DELETE FROM camp WHERE id IN
        <foreach item="idItem" collection="array" open="(" separator="," close=")">
            #{idItem}
        </foreach>
    </delete>
    <!--List<Camp> findCampsActiveByUserId(long userId);-->
    <select id="findCampsActiveByUserId" parameterType="long" resultMap="campWithGroupId">
        SELECT c.id, c.group_id, c.title, c.type FROM camp c LEFT JOIN camp_attend ca ON ca.camp_id = c.id
        LEFT JOIN user u ON u.id = ca.user_id
        WHERE c.status = 2 AND u.id = #{userId}
    </select>
    <select id="findCampByTypeWithTitle" resultMap="campWithTitle">
        SELECT c.id, c.title, c.subtitle, c.type FROM camp c
        LEFT JOIN camp_attend ca ON ca.camp_id = c.id
        LEFT JOIN teacher t ON ca.user_id = t.id
        LEFT JOIN user_detail ud ON ud.id = t.id
        WHERE ud.city = #{city} AND c.type = #{type} AND (c.status = 1 OR c.status = 2)
    </select>

    <select id="findCampList" parameterType="long" resultMap="campList">
        SELECT c.id, c.title, c.subtitle, c.comment, c.price0, c.type, t.id, t.star, t.description, tag.* FROM camp c
        LEFT JOIN camp_attend ca ON c.id = ca.camp_id
        LEFT JOIN teacher t ON t.id = ca.user_id
        LEFT JOIN user_tag ut ON t.id = ut.user_id
        LEFT JOIN tag ON ut.tag_id = tag.id
        LEFT JOIN camp_collection cc ON cc.camp_id = c.id
        WHERE cc.user_id = #{userId} AND ca.role = 2
        GROUP BY cc.id
    </select>

    <select id="findCampListBySchoolId" parameterType="long" resultMap="campList">
        SELECT c.id, c.title, c.subtitle, c.comment, c.price0, c.type, t.id, t.star, t.description, tag.* FROM camp c
        LEFT JOIN camp_attend ca ON c.id = ca.camp_id
        LEFT JOIN teacher t ON t.id = ca.user_id
        LEFT JOIN user_tag ut ON ut.user_id = t.id
        LEFT JOIN tag ON ut.tag_id = tag.id
        LEFT JOIN user_detail ud ON ud.id = t.id
        WHERE ud.child_school = #{schoolId} AND (c.status = 1 OR c.status = 2)
    </select>

    <select id="findCampByIdWithDetail" parameterType="long" resultMap="campWithTeacher">
        SELECT c.*, t.* FROM camp c
        LEFT JOIN camp_attend ca ON c.id = ca.camp_id
        LEFT JOIN teacher t ON ca.user_id = t.id
        WHERE c.id = #{id}
    </select>

    <select id="queryCampById" parameterType="long" resultType="com.platform.parent.mybatis.bean.Camp">
        SELECT <include refid="baseColumn"/> FROM camp WHERE id = #{id}
    </select>

    <select id="findCampsByType" parameterType="int" resultType="com.platform.parent.mybatis.bean.Camp">
        SELECT * FROM camp WHERE type = #{type}
    </select>

    <select id="findCampsByStatus" parameterType="int" resultType="com.platform.parent.mybatis.bean.Camp">
        SELECT * FROM camp WHERE status = #{status}
    </select>

    <select id="findCampsByParams" parameterType="java.util.HashMap" resultType="com.platform.parent.mybatis.bean.Camp">
        SELECT <include refid="baseColumn"/> FROM camp
        <where>
            <if test="type != null">
                type = #{type}
            </if>
            <if test="status != null" >
                AND status = #{status}
            </if>
            <if test="maxLimit != null">
                AND max_limit = #{maxLimit}
            </if>
            <if test="minLimit != null">
                AND min_limit = #{minLimit}
            </if>
        </where>
    </select>

    <select id="findCampsByStatusWithTag" parameterType="int" resultMap="resultMapWithTag">
        SELECT c.*, t.name FROM camp c
        LEFT JOIN camp_tag ct ON c.id = ct.camp_id
        LEFT JOIN tag t ON  t.id = ct.tag_id
        WHERE c.status = #{status}
    </select>

    <select id="findCampsByTypeWithTag" parameterType="int" resultMap="resultMapWithTag">
        SELECT c.*, t.name FROM camp c
        LEFT JOIN camp_tag ct ON c.id = ct.camp_id
        LEFT JOIN tag t ON t.id = ct.tag_id
        WHERE c.type = #{type}
    </select>

    <select id="findAllCampsWithTeacher" resultMap="campWithTeacher">
        SELECT c.*, t.id, t.star, t.description FROM camp c
        LEFT JOIN camp_attend ca ON c.id = ca.camp_id AND ca.role = 2
        LEFT JOIN teacher t ON ca.user_id = t.id
    </select>

    <!--<delete id="clearCampsWithoutTeacher">
        DELETE FROM camp USING camp c LEFT JOIN camp_attend ca ON c.id = ca.camp_id AND ca.role = 2
        LEFT JOIN teacher t ON ca.user_id = t.id WHERE t.id IS NULL
    </delete>-->

    <select id="findCampByTeacherId" parameterType="long" resultType="com.platform.parent.mybatis.bean.Camp">
        SELECT c.* FROM camp c
            LEFT JOIN  camp_attend ca ON c.id = ca.camp_id
            LEFT JOIN teacher t ON t.id = ca.user_id
            WHERE t.id = #{id} AND c.type = 0
        GROUP BY c.id
    </select>

    <update id="addFavor" parameterType="long">
        UPDATE camp SET favor = favor + 1 WHERE id = #{id}
    </update>

</mapper>
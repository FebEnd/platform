<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.parent.mybatis.dao.SchoolMapper">
    <resultMap id="schoolWithLocation" type="com.platform.parent.mybatis.bean.School">
        <id property="id" column="id"/>
        <result property="locationId" column="location_id"/>
        <result property="fullName" column="full_name"/>
        <result property="heat" column="heat"/>
        <association property="location" javaType="com.platform.parent.mybatis.bean.Location">
            <id property="id" column="id"/>
            <result property="province" column="province"/>
            <result property="city" column="city"/>
            <result property="district" column="district"/>
            <result property="six" column="six"/>
        </association>
    </resultMap>

    <resultMap id="schoolWithAlias" type="com.platform.parent.mybatis.bean.School">
        <id property="id" column="id"/>
        <result property="locationId" column="location_id"/>
        <result property="fullName" column="full_name"/>
        <result property="heat" column="heat"/>
        <collection property="alias" ofType="com.platform.parent.mybatis.bean.SchoolAlias">
            <id property="id" column="id"/>
            <result property="alias" column="alias"/>
            <result property="schoolId" column="school_id"/>
        </collection>
    </resultMap>

    <resultMap id="schoolWithDetail" type="com.platform.parent.mybatis.bean.School">
        <id property="id" column="id"/>
        <result property="locationId" column="location_id"/>
        <result property="fullName" column="full_name"/>
        <result property="heat" column="heat"/>
        <association property="location" javaType="com.platform.parent.mybatis.bean.Location">
            <id property="id" column="id"/>
            <result property="province" column="province"/>
            <result property="city" column="city"/>
            <result property="district" column="district"/>
            <result property="six" column="six"/>
        </association>
        <collection property="alias" ofType="com.platform.parent.mybatis.bean.SchoolAlias">
            <id property="id" column="id"/>
            <result property="alias" column="alias"/>
            <result property="schoolId" column="school_id"/>
        </collection>
    </resultMap>

    <!--int add(School school);-->
    <!--int update(School school);-->
    <!--int deleteByIds(String[] ids);-->
    <!--School findSchoolById(long id);-->
    <!--List<School> findSchoolByFullName(String name);-->
    <!--List<School> findSchoolByAlias(String alias);-->
    <!--private long id, locationId;-->
    <!--private String fullName, alias;-->

    <insert id="add" parameterType="com.platform.parent.mybatis.bean.School" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO school (full_name, location_id, heat)
        VALUES (#{fullName}, #{locationId}, #{heat});
    </insert>

    <update id="update" parameterType="com.platform.parent.mybatis.bean.School">
        UPDATE school
        SET full_name = #{fullName}, lication_id = #{locationId}, heat = #{heat}
        WHERE id = #{id}
    </update>

    <delete id="deleteByIds" parameterType="java.lang.String">
        DELETE FROM school WHERE id IN
        <foreach item="idItem" collection="array" open="(" separator="," close=")">
            #{idItem}
        </foreach>
    </delete>

    <select id="findSchoolById" parameterType="long" resultMap="schoolWithDetail">
        SELECT s.*, sa.*, l.* FROM school s LEFT JOIN school_alias sa ON s.id = sa.school_id
        LEFT JOIN location l ON l.id = s.location_id
        WHERE s.id = #{id}
    </select>
    
    <select id="findSchoolByFullName" parameterType="java.lang.String" resultType="com.platform.parent.mybatis.bean.School">
        SELECT * FROM school WHERE full_name = #{fullName}
    </select>

    <select id="findSchoolByAlias" parameterType="java.lang.String" resultMap="schoolWithAlias">
        SELECT s.*, sa.* FROM school s LEFT JOIN school_alias sa ON s.id = sa.school_id WHERE sa.alias = #{alias}
    </select>

    <select id="findSchoolFuzzy" parameterType="java.lang.String" resultMap="schoolWithAlias">
        SELECT s.*, sa.* FROM school s
        LEFT JOIN school_alias sa ON s.id = sa.school_id
        WHERE s.full_name LIKE concat(concat('%',#{fuzzy}),'%')
              OR sa.alias LIKE concat(concat('%',#{fuzzy}),'%')
        GROUP BY s.id
    </select>

    <select id="findAllSchool" resultMap="schoolWithLocation">
        SELECT s.*, l.* FROM school s, location l WHERE s.location_id = l.id
    </select>

    <update id="addHeat" parameterType="long">
        UPDATE school SET heat = school.heat+1 WHERE id = #{id}
    </update>

    <select id="findHotSchool" parameterType="java.lang.String" resultMap="schoolWithAlias">
        SELECT s.*, sa.* FROM school s
        LEFT JOIN school_alias sa ON s.id = sa.school_id
        LEFT JOIN location l ON l.id = s.location_id
        WHERE l.city LIKE concat(concat('%',#{location},'%'))
        GROUP BY s.id
        ORDER BY s.heat DESC
        LIMIT 9
    </select>

</mapper>